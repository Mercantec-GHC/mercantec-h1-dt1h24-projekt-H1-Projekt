@page "/"
@rendermode InteractiveServer
@using BlazorApp.Service;
@inject DBService DbService;

<PageTitle>Surely this website has a funny name :clueless:</PageTitle>

<div class="alert alert-info" role="alert">
    <p>@connectionStatus</p>
</div>

<div class="container my-3">
    <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-indicators">
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
        </div>
        <div class="carousel-inner">
            <div class="carousel-item active">
                <img src="/CarsPictures/Mini1.png" class="d-block w-100" alt="...">
            </div>
            <div class="carousel-item">
                <img src="..." class="d-block w-100" alt="...">
            </div>
            <div class="carousel-item">
                <img src="..." class="d-block w-100" alt="...">
            </div>
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </button>
    </div>
</div>
}

@code {
    private string connectionStatus;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var connection = DbService.GetConnection();
            if (connection.State == System.Data.ConnectionState.Open)
            {
                connectionStatus = "Database connection successful";
            }
            else
            {
                connectionStatus = "Failed to connect to databse";
            }
        }
        catch (Exception e)
        {
            connectionStatus = $"Error: {e.Message}";
        }
    }
}