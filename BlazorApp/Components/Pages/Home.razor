@page "/"
@using BlazorApp.Service;
@inject DBService DbService;

<PageTitle>Mini Basen</PageTitle>

<div id="home_page">
    <div class="mb-3" style="width: 18rem; display: inline-block; align-content: center;">
        <input type="email" class="form-control" id="exampleFormControlInput1" placeholder="Mini Cooper Example...">
    </div>

    <div class="container">
        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-4 g-3">

            <div class="col">
                <div class="card h-100">
                    <a href="">
                        <img src="images/ev.jpg" class="card-img" alt="category pic..." onclick="@SortByEv"/>
                    </a>
                </div>
            </div>

            <div class="col">
                <div class="card h-100">
                    <a href="">
                        <img src="images/benzin.webp" class="card-img" alt="category pic..." onclick="@SortByBenzin"/>
                    </a>
                </div>
            </div>

            <div class="col">
                <div class="card h-100">
                    <a href="">
                        <img src="images/diesel.jpg" class="card-img" alt="category pic..." onclick="@SortByDiesel"/>
                    </a>
                </div>
            </div>

            <div class="col">
                <div class="card h-100">
                    <a href="">
                        <img src="images/hybrid.jpg" class="card-img" alt="category pic..." onclick="@SortByHybrid"/>
                    </a>
                </div>
            </div>

        </div>
    </div>

    <div class="container">

        <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-4 g-3">

            @foreach (var fullMiniCooper in sortedFullMiniCoopers)
            {
                <div class="col" style="padding: 10px">
                    <div class="card h-100">

                        <div id="@fullMiniCooper.GetCarId()" class="carousel slide">
                            <div class="carousel-inner">
                                <div
                                    class="carousel-item active"> @* Karrusel skal have en "active" klasse, ellers så bliver ikke vist. - Bootstrap *@
                                    <a href="#">
                                        <img src="data:image/png;base64,@fullMiniCooper.GetFirstImage()"
                                             class="d-block w-100"
                                             alt="HeaderImage">
                                    </a>
                                </div>
                                @* Siden vi skal have et "header" element, så starter vi ved 1, i stedet for 0. *@
                                @for (int i = 1; i < fullMiniCooper.GetImages().Count; i++)
                                {
                                    <div class="carousel-item">
                                        <a href="#">
                                            <img src="data:image/png;base64,@fullMiniCooper.GetImageByIndex(i)"
                                                 class="d-block w-100" alt="sliderImage">
                                        </a>
                                    </div>
                                }
                            </div>
                            <button class="carousel-control-prev" type="button"
                                    data-bs-target="#@fullMiniCooper.GetCarId()"
                                    data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button"
                                    data-bs-target="#@fullMiniCooper.GetCarId()"
                                    data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>

                        <div class="card-body">
                            <h5 class="card-title">@fullMiniCooper.GetModelName()</h5>
                            <p class="card-text">@fullMiniCooper.GetModelType()</p>
                            <p class="card-text">@fullMiniCooper.GetGeneration()</p>
                            <p class="card-text">@fullMiniCooper.GetFuelType()</p>
                            <p class="card-text">@fullMiniCooper.GetGearType()</p>
                            <p class="card-text">@fullMiniCooper.GetPrice().ToString(".kr")</p>
                        </div>
                    </div>
                </div>
            }
        </div>

    </div>
</div>

@code {
    List<MiniCooper.FullMiniCooper> fullMiniCoopers = new();
    List<MiniCooper.FullMiniCooper> sortedFullMiniCoopers = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Console.WriteLine("Getting all mini coopers...");
            fullMiniCoopers = await DbService.GetAllMiniCoopersAsync();
            sortedFullMiniCoopers = fullMiniCoopers;
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error initializing home page: " + ex.Message);
            Console.WriteLine("StackTrace: " + ex.StackTrace);
            throw;
        }
    }

    private void SortByEv()
    {
        Console.WriteLine("Sorting by Ev...");

        var fullMiniCooperCaller = new MiniCooper.FullMiniCooper();
        sortedFullMiniCoopers = fullMiniCooperCaller.SortByEv(fullMiniCoopers);
    }

    private void SortByBenzin()
    {
        Console.WriteLine("Sorting by Benzin...");

        var fullMiniCooperCaller = new MiniCooper.FullMiniCooper();
        sortedFullMiniCoopers = fullMiniCooperCaller.SortByBenzin(fullMiniCoopers);
    }

    private void SortByDiesel()
    {
        Console.WriteLine("Sorting by Diesel...");

        var fullMiniCooperCaller = new MiniCooper.FullMiniCooper();
        sortedFullMiniCoopers = fullMiniCooperCaller.SortByDiesel(fullMiniCoopers);
    }

    private void SortByHybrid()
    {
        Console.WriteLine("Sorting by Hybrid...");

        var fullMiniCooperCaller = new MiniCooper.FullMiniCooper();
        sortedFullMiniCoopers = fullMiniCooperCaller.SortByHybrid(fullMiniCoopers);
    }

}