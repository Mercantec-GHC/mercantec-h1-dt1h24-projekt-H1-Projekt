@using BlazorApp.Service
@inject DBService DbService
@inject UsersService.User user

<label>Indtast bil som skal ændres</label>
<InputText @bind-Value="carName"/>
<button type="button" onclick="@GetCooper">Hent Cooper</button>

@if (fullCooper == null)
{
}
else
{
    <EditForm Model="@baseCooper" OnValidSubmit="@UpdateCooper">
        <label class="form-label">Model Navn:</label>
        <InputText @bind-Value="baseCooper.ModelName" class="form-control"/>

        <label class="form-label">Generation:</label>
        <InputNumber @bind-Value="baseCooper.Generation" class="form-control"/>

        <label class="form-label">Model Type:</label>
        <InputText @bind-Value="baseCooper.ModelType" class="form-control"/>

        <label class="form-label">Farve:</label>
        <InputText @bind-Value="baseCooper.Color" class="form-control"/>

        <label class="form-label">Pris:</label>
        <InputNumber @bind-Value="baseCooper.Price" class="form-control"/>

        <label class="form-label">Kilometertal:</label>
        <InputNumber @bind-Value="baseCooper.Mileage" class="form-control"/>

        <label class="form-label">Max rækkevidde:</label>
        <InputNumber @bind-Value="baseCooper.MaxRange" class="form-control"/>

        <label class="form-label">Vægt:</label>
        <InputNumber @bind-Value="baseCooper.Weight" class="form-control"/>

        <label class="form-label">Brændstoftype:</label>
        <InputText @bind-Value="baseCooper.FuelType" class="form-control"/>

        <label class="form-label">Gear type:</label>
        <InputText @bind-Value="baseCooper.GearType" class="form-control"/>

        <label class="form-label">Årlig skat:</label>
        <InputNumber @bind-Value="baseCooper.YearlyTax" class="form-control"/>
    </EditForm>
    @if (fullCooper.GetEvCooper() != null)
    {
        SetEvCooper();
        <EditForm Model="@evCooper">
            <label class="form-label">Charge Capacity:</label>
            <InputNumber @bind-Value="evCooper.ChargeCapacity" class="form-control"/>

            <label class="form-label">Km. pr. kWh:</label>
            <InputNumber @bind-Value="evCooper.KmPrKwh" class="form-control"/>
        </EditForm>
    }
    else if (fullCooper.GetFossilCooper() != null)
    {
        SetFossilCooper();
        <EditForm Model="@fossilCooper">
            <label class="form-label">Tank Capacity:</label>
            <InputNumber @bind-Value="fossilCooper.TankCapacity" class="form-control"/>

            <label class="form-label">Km. pr. liter:</label>
            <InputNumber @bind-Value="fossilCooper.KmPrLiter" class="form-control"/>

            <label class="form-label">Gears (0 if auto):</label>
            <InputNumber @bind-Value="fossilCooper.Gears" class="form-control"/>
        </EditForm>
    }
    else if (fullCooper.GetHybridCooper() != null)
    {
        SetHybridCooper();
        <EditForm Model="@hybridCooper">
            <label class="form-label">Fuel Type 1:</label>
            <InputText @bind-Value="hybridCooper.FuelType1" class="form-control"/>

            <label class="form-label">Fuel Type 2:</label>
            <InputText @bind-Value="hybridCooper.FuelType2" class="form-control"/>

            <label class="form-label">Tank Capacity:</label>
            <InputNumber @bind-Value="hybridCooper.TankCapacity" class="form-control"/>

            <label class="form-label">Charge Capacity:</label>
            <InputNumber @bind-Value="hybridCooper.ChargeCapacity" class="form-control"/>

            <label class="form-label">Km. pr. liter:</label>
            <InputNumber @bind-Value="hybridCooper.KmPrLiter" class="form-control"/>

            <label class="form-label">Km. pr. kWh:</label>
            <InputNumber @bind-Value="hybridCooper.KmPrKwh" class="form-control"/>

            <label class="form-label">Gears (0 if auto):</label>
            <InputNumber @bind-Value="hybridCooper.Gears" class="form-control"/>
        </EditForm>
    }

    <button type="button" onclick="@UpdateCooper">Opdaterer Cooper</button>
    <button type="button" onclick="@DeleteCooper" class="btn btn-danger">Slet Cooper</button>
}

@code{

    string carName = "";
    MiniCooper.FullMiniCooper? fullCooper;
    MiniCooper.BaseMiniCooper baseCooper = new();

    MiniCooper.EvMiniCooper? evCooper = null;
    MiniCooper.FossilMiniCooper? fossilCooper = null;
    MiniCooper.HybridMiniCooper? hybridCooper = null;

    private async Task GetCooper()
    {
        try
        {
            fullCooper = await DbService.GetFullMiniCooperByUserIdAndName(user.Id, carName);
            // Hvis fullCooper er null, kunne bilen ikke blive fundet.
            if (fullCooper == null)
            {
                Console.WriteLine("FullCooper is null, sorry.");
                return;
            }
            await baseCooper.SetBaseMiniCooper(fullCooper.GetBaseCooper());
            fullCooper.PrintAutomatically();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error getting cooper to edit: " + ex.Message);
            Console.WriteLine("StackTrace: " + ex.StackTrace);
            throw;
        }
    }

    private async Task UpdateCooper()
    {
        Console.WriteLine("Updating cooper...");
        MiniCooper.FullMiniCooper editedFullCooper = new();
        if (evCooper != null)
        {
            Console.WriteLine("Updating ev...");
            evCooper.SetBaseMiniCooper(baseCooper);
            editedFullCooper.SetMiniCooper(evCooper);
        }
        else if (fossilCooper != null)
        {
            Console.WriteLine("Updating fossil...");

            fossilCooper.SetBaseMiniCooper(baseCooper);
            editedFullCooper.SetMiniCooper(fossilCooper);
        }
        else if (hybridCooper != null)
        {
            Console.WriteLine("Updating hybrid...");
            hybridCooper.SetBaseMiniCooper(baseCooper);
            editedFullCooper.SetMiniCooper(hybridCooper);
        }

        editedFullCooper.PrintAutomatically();
        await DbService.UpdateCooper(editedFullCooper, fullCooper.GetCarId());
        fullCooper.Clear();
        editedFullCooper.Clear();
    }

    private void SetEvCooper()
    {
        evCooper = fullCooper.GetEvCooper();
    }

    private void SetFossilCooper()
    {
        fossilCooper = fullCooper.GetFossilCooper();
    }

    private void SetHybridCooper()
    {
        hybridCooper = fullCooper.GetHybridCooper();
    }

    private async Task DeleteCooper()
    {
        await DbService.DeleteCarByIdAsync(fullCooper.GetCarId());
    }


}