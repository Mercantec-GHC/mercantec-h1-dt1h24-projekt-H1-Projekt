@page "/developer"
@using BlazorApp.Service
@inject DBService DbService
@inject UsersService.User user

<button onclick="@GetFullMiniCoopers">Get full mini coopers.</button>

<div class="container">

    <div class="row row-cols-2 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-1">
        @foreach (var fullMiniCooper in fullMiniCoopers)
        {
            <div class="col" style="padding: 10px">
                <div class="card h-100">

                    <div id="@fullMiniCooper.GetCarId()" class="carousel slide">
                        <div class="carousel-inner">
                            <div class="carousel-item active"> @* Karrusel skal have en "active" klasse, ellers så bliver ikke vist. - Bootstrap *@
                                <img src="data:image/png;base64,@fullMiniCooper.GetFirstImage()" class="d-block w-100"
                                     alt="HeaderImage">
                            </div>
                            @* Siden vi skal have et "header" element, så starter vi ved 1, i stedet for 0. *@
                            @for (int i = 1; i < fullMiniCooper.GetImages().Count; i++)
                            {
                                <div class="carousel-item">
                                    <img src="data:image/png;base64,@fullMiniCooper.GetImageByIndex(i)" class="d-block w-100" alt="sliderImage">
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#@fullMiniCooper.GetCarId()"
                                data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#@fullMiniCooper.GetCarId()"
                                data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>

                    <div class="card-body">
                        <h5 class="card-title">@fullMiniCooper.GetModelName()</h5>
                        <p class="card-text">@fullMiniCooper.GetPrice()</p>
                    </div>
                </div>
            </div>
        }
    </div>

</div>

<EditForm Model="@user" OnValidSubmit="@HandleUserForm">
    <label>Navn</label>
    <InputText @bind-Value="user.Name"/>
    
    <label>Password</label>
    <InputText @bind-Value="user.Password"/>
    
    <label>Mobile</label>
    <InputNumber @bind-Value="user.Mobile"/>
    
    <label>Email</label>
    <InputText @bind-Value="user.Email"/>
    
    <label>City</label>
    <InputText @bind-Value="user.City"/>
    
    <label>Address</label>
    <InputText @bind-Value="user.Address"/>
    
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

<button class="btn btn-danger" onclick="@GetCar">Get car</button>

<button onclick="@SetUserId">Set user id</button>

<EditForm Model="@user" OnValidSubmit="@LogUserIn">
    <label>Email</label>
    <InputText @bind-Value="userEmail"/>

    <label>Password</label>
    <InputText @bind-Value="userPassword"/>
    
    <button class="btn btn-primary" type="submit">Login</button>
</EditForm>

@code{
    string userEmail = string.Empty;
    string userPassword = string.Empty;

    private async Task LogUserIn()
    {
        var tempUser = await DbService.LogUserOn(userEmail, userPassword);
        user.SetUser(tempUser);
    }
    
    private async Task GetCar()
    {
        await DbService.GetEvByIdAsync(99);
    }

    private async Task HandleUserForm()
    {
        user.Print();
        await DbService.AddUserAsync(user);
    }

    List<MiniCooper.FullMiniCooper> fullMiniCoopers = new();

    private async Task GetFullMiniCoopers()
    {
        fullMiniCoopers = await DbService.GetAllMiniCoopersAsync();
    }

    /*private async Task DeleteAndResetTable()
    {
        await DbService.DELETEEVERYTHING("cars");
    }*/

    private void SetUserId()
    {
        user.Id = 2;
    }

}