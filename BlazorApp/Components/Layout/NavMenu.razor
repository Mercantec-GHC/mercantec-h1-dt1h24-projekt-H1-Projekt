@using BlazorApp.Service
@inject DBService DbService
@inject UsersService.User user
@inject NavigationManager NavigationManager

@* Top page navbar*@
<nav class="navbar navbar-expand-lg" style="background-color: #012169">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">
            <img src="/images/Minibasen Mini.png" alt="Minibasen" />
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
                aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">
                <a class="nav-link active" aria-current="page" href="#" style="color: white;">Home</a>
            </div>
            <div class="navbar-nav  ms-auto">

                @if (user.Id == 0)
                {
                    @* Knap for login modal *@
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#loginModal">
                        Log ind
                    </button>
                }
                else
                {
                    <a href="/user-dashboard"><p style="color: white">@user.Name Dashboard</p></a>
                    <button type="button" class="btn btn-danger" onclick="@LogUserOut">Log ud</button>
                }

            </div>
        </div>
    </div>
</nav>

@* Login modal form *@
<div class="modal fade" id="loginModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                @if (loadRegisterForm)
                {
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Registrer Formular</h1>
                }
                else
                {
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Log ind Formular</h1>
                }
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (!loadRegisterForm)
                {
                    <EditForm Model="@user" OnValidSubmit="@HandleLogin">

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="fullName" class="col-form-label">Fulde navn</label>
                            </div>
                            <div class="col-md-8">
                                <InputText @bind-Value="user.Email" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="password" type="password" class="col-form-label">Kodeord</label>
                            </div>
                            <div class="col-md-8">
                                <InputText type="password" @bind-Value="user.Password" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">

                            <button type="submit" class="btn btn-primary">Log ind</button>
                        </div>

                    </EditForm>
                }
                else
                {
                    <EditForm Model="@user" OnSubmit="@HandleRegister">
                        <DataAnnotationsValidator />

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="fullName" class="col-form-label">Fulde navn</label>
                            </div>
                            <div class="col-md-8">
                                <InputText id="fullName" @bind-Value="user.Name" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="password" class="col-form-label">Kodeord</label>
                            </div>
                            <div class="col-md-8">
                                <InputText id="password" type="password" @bind-Value="user.Password" class="form-label w-100" aria-describedby="passwordHelpInline" />
                                @* <div id="passwordHelpBlock" class="form-text"> *@
                                @*         Dit kodeord skal være 8-20 tegn langt, indeholde bogstaver og tal og må ikke indeholde mellemrum, specialtegn eller emoji. *@
                                @* </div> *@
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="mobile" class="col-form-label">Mobil nummer</label>
                            </div>
                            <div class="col-md-8">
                                <InputNumber id="mobile" @bind-Value="user.Mobile" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="email" class="col-form-label">E-mail</label>
                            </div>
                            <div class="col-md-8">
                                <InputText id="email" @bind-Value="user.Email" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="city" class="col-form-label">City</label>
                            </div>
                            <div class="col-md-8">
                                <InputText id="city" @bind-Value="user.City" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label for="address" class="col-form-label">Adresse</label>
                            </div>
                            <div class="col-md-8">
                                <InputText id="address" @bind-Value="user.Address" class="form-label w-100" />
                            </div>
                        </div>

                        <div class="d-flex justify-content-end">

                            <button type="submit" class="btn btn-primary">Registrer Profil</button>
                        </div>
                    </EditForm>
                }
            </div>

            <div class="modal-footer d-flex justify-content-start">
                @if (loadRegisterForm)
                {
                    <p>Har du allerede en profil?
                        <a href="" @onclick="@LoadLoginForm">Log ind</a>
                    </p>
                }
                else
                {
                    <p>
                        Har du ikke en profil?
                        <a href="" @onclick="@LoadRegisterForm">Tilmeld</a>
                    </p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    bool loadRegisterForm = false;

    private async Task HandleRegister()
    {
        await DbService.AddUserAsync(user);
    }

    private void LoadRegisterForm()
    {
        loadRegisterForm = true;
    }

    private void LoadLoginForm()
    {
        loadRegisterForm = false;
    }

    private async Task HandleLogin()
    {
        var tempUser = await DbService.LogUserOn(user.Email, user.Password);

        if (tempUser.Id == 0)
        {
            Console.WriteLine("User was not found");
            return;
        }

        user.SetUser(tempUser);
        user.Print();

        NavigationManager.NavigateTo("/user-dashboard");
    }

    private void LogUserOut()
    {
        user.Clear();
        NavigationManager.NavigateTo("/");
    }

}